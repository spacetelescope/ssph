SSPH is a Shiboleth Service Provider Helper.

Shibboleth is hard for a service provider to use directly.  There is a
huge amount of detail, and you can't get it right without a very good
understanding of SAML.  But, whoever set up your IDP can give you
an Apache server that uses Shibboleth to authenticate access to a
directory on that server.

SSPH is a simple CGI program that offers an easy way for non-Apache
web servers (e.g. Tornado) to get Shibboleth authentication through
an Apache server that has SSPH installed.

SSPH is currently scoped to provide user authentication only.  It
is assumed that your application will track authorization and
perform access control.

SSPH does not implement anonymous users, but your application
can by simply not directing the anonymous users through SSPH.

--
Overview:

Your SP offers a LOGIN button that redirects to a specific URL on the
SSPH server.  This URL includes your application's session cookie as a
CGI argument.

SSPH authenticates your user.  The authentication information (i.e. who
the user is) is inserted into a database table.

The user is then redirected back to a URL on your SP.

There are two options for your SP:

- You can configure SSPH to insert the authentication directly into
  your database.  You confirm the authentication by looking up your
  session cookie in the table. (SPDB mode)

- You confirm the authentication by asking SSPH if it has authenticated
  the session cookie. (SSPHDB mode)

This system depends on your client choosing cryptographically strong
session cookies.

--
Setting up your SP as a client of SSPH

Make your LOGIN button go to
	https://etcbrady.stsci.edu/Shibboleth.sso/Login?
		target=https://etcbrady.stsci.edu/secure/ssph.cgi?
		sp=NAME,cookie

	NAME is the name of your application
	cookie is a crypto session cookie

Configure SSPH to recognize your SP:
	https://etcbrady.stsci.edu/secure/ssph_admin.cgi

	sp 		NAME that you used in the URL above
	url		URL on your web server where the user will
			return to after authentication
	confirm_mode	'd' for SPDB mode (your own database) or
			'c' for SSPHDB mode (connect to SSPH to
				confirm logins)
	dbtype		type of database you are using (blank
			in SSPHDB mode)
	dbcreds		JSON of database credentials (see below)
			(blank in SSPHDB mode)
	expiry		number of seconds after authentication
			before SSPH may forget the authentication
			event.
	contact		names of people who manage your SP
	email		email address of contacts for your SP
	secret		shared secret for your SP to ask SSPH
			to confirm authentication
	hash		hash type to use with shared secret


If the user succeeds in logging in, they will come to your application
at
	RETURN_URL?c=cookie


--
Confirming the authentication, SPDB mode

When the user comes back to RETURN_URL:

	"SELECT blob FROM ssph_auths
		WHERE sp = :1 AND cookie = :2"
		( name, cookie )

The blob will be JSON encoding of whatever information Shibboleth provided
in the environment for the authenticated cgi.

Your application MUST ALSO CONFIRM that it issued the session cookie.
If your application did not issue the session cookie, then it is likely
a spoof.


--
Confirming the authentication, SSPHDB mode

See documentation or example programs in clients/ in the source code


Later feature:

some way to generate cryptographic session cookies.


--

Installing SSPH

SSPH is a set of small python programs.

always required:
	pip install pandokia

for Microsoft SQL Server support:

	install freetds RPMs
	pip install pymssql

for MySQL support:

	install mysql client library RPMs
	install MySQLdb from docs at
		http://mysql-python.sourceforge.net/MySQLdb.html

for Postgres support:
	install postgres client library RPMs
	pip install psycopg2
		docs at http://initd.org/psycopg/docs/

n.b. There is one database for SSPH, but it can connect directly to the
database of the SP to confirm the authentications.  In that case, you
may need more than one database client.

